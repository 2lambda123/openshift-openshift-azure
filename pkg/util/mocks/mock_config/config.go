// Code generated by MockGen. DO NOT EDIT.
// Source: config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	plugin "github.com/openshift/openshift-azure/pkg/api/plugin"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Generate mocks base method
func (m *MockInterface) Generate(template *plugin.Config, setVersionFields bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", template, setVersionFields)
	ret0, _ := ret[0].(error)
	return ret0
}

// Generate indicates an expected call of Generate
func (mr *MockInterfaceMockRecorder) Generate(template, setVersionFields interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockInterface)(nil).Generate), template, setVersionFields)
}

// InvalidateSecrets mocks base method
func (m *MockInterface) InvalidateSecrets() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvalidateSecrets")
	ret0, _ := ret[0].(error)
	return ret0
}

// InvalidateSecrets indicates an expected call of InvalidateSecrets
func (mr *MockInterfaceMockRecorder) InvalidateSecrets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvalidateSecrets", reflect.TypeOf((*MockInterface)(nil).InvalidateSecrets))
}
