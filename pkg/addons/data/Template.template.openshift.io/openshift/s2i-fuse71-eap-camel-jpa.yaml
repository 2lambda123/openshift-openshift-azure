apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: s2i-fuse71-eap-camel-jpa
metadata:
  annotations:
    description: Red Hat Fuse on EAP Camel JPA quickstart. This example demonstrates
      how to connect a Camel application with Red Hat Fuse on EAP to a MySQL database
      and expose a REST API. This example creates two containers, one container to
      run as a MySQL server, and another running the Camel application which acts
      as as a client to the database.
    iconClass: icon-rh-integration
    openshift.io/display-name: Red Hat Fuse 7.1 Camel JPA + MySQL (Ephemeral) with
      EAP
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: quickstart,javaee,java,jboss-fuse,fis
    version: "1.1"
  name: s2i-fuse71-eap-camel-jpa
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: ${APP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The database server's port.
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}-mysql
  spec:
    ports:
    - port: 3306
      targetPort: 3306
    selector:
      deploymentConfig: ${APP_NAME}-mysql
- apiVersion: v1
  id: ${APP_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APP_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    resources:
      limits:
        memory: ${BUILD_MEMORY_LIMIT}
      requests:
        memory: ${BUILD_MEMORY_REQUEST}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: DB_JNDI
          value: ${DB_JNDI}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fuse7-eap-openshift:${BUILDER_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      container: eap
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APP_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          component: ${APP_NAME}
          container: eap
          deploymentConfig: ${APP_NAME}
          group: quickstarts
          provider: s2i
          version: ${APP_VERSION}
        name: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: ${APP_NAME}-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: DB_SERVICE_PREFIX_MAPPING
            value: ${APP_NAME}-mysql=DB
          - name: DB_JNDI
            value: ${DB_JNDI}
          - name: DB_DATABASE
            value: ${DB_DATABASE}
          - name: DB_USERNAME
            value: ${DB_USERNAME}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DB_MIN_POOL_SIZE
            value: ${DB_MIN_POOL_SIZE}
          - name: DB_MAX_POOL_SIZE
            value: ${DB_MAX_POOL_SIZE}
          - name: DB_TX_ISOLATION
            value: ${DB_TX_ISOLATION}
          - name: TX_DATABASE_PREFIX_MAPPING
            value: ${APP_NAME}-mysql=DB
          - name: MQ_CLUSTER_PASSWORD
            value: ${MQ_CLUSTER_PASSWORD}
          - name: MQ_QUEUES
            value: ${MQ_QUEUES}
          - name: MQ_TOPICS
            value: ${MQ_TOPICS}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: AUTO_DEPLOY_EXPLODED
            value: ${AUTO_DEPLOY_EXPLODED}
          image: ${APP_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
            initialDelaySeconds: 60
          name: ${APP_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}-mysql
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APP_NAME}-mysql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          component: ${APP_NAME}
          deploymentConfig: ${APP_NAME}-mysql
          group: quickstarts
          provider: s2i
          version: ${APP_VERSION}
        name: ${APP_NAME}-mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${DB_USERNAME}
          - name: MYSQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${DB_DATABASE}
          - name: MYSQL_LOWER_CASE_TABLE_NAMES
            value: ${MYSQL_LOWER_CASE_TABLE_NAMES}
          - name: MYSQL_MAX_CONNECTIONS
            value: ${MYSQL_MAX_CONNECTIONS}
          - name: MYSQL_FT_MIN_WORD_LEN
            value: ${MYSQL_FT_MIN_WORD_LEN}
          - name: MYSQL_FT_MAX_WORD_LEN
            value: ${MYSQL_FT_MAX_WORD_LEN}
          - name: MYSQL_AIO
            value: ${MYSQL_AIO}
          image: mysql
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: ${APP_NAME}-mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}-mysql
        from:
          kind: ImageStreamTag
          name: mysql:${MYSQL_IMAGE_STREAM_TAG}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: s2i-fuse71-eap-camel-jpa
- description: The application version.
  displayName: Application Version
  name: APP_VERSION
  required: true
  value: 5.2.0.fuse-710018-redhat-00001
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname.
  name: HOSTNAME_HTTP
- description: Git source URI for application.
  displayName: Git Repository URL
  name: GIT_REPO
  required: true
  value: https://github.com/jboss-fuse/wildfly-camel-examples.git
- description: Git branch/tag reference
  displayName: Git Reference
  name: GIT_REF
  value: wildfly-camel-examples-5.2.0.fuse-710018-redhat-00001
- description: Path within Git project to build; empty for root project directory.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The version of the FIS S2I builder image to use.
  displayName: Builder version
  name: BUILDER_VERSION
  value: "1.1"
- description: Database JNDI name used by application to resolve the datasource, e.g.
    java:/jboss/datasources/OrdersDS
  displayName: Database JNDI Name
  name: DB_JNDI
  value: java:jboss/datasources/OrdersDS
- description: Database name
  displayName: Database Name
  name: DB_DATABASE
  required: true
  value: orders_db
- description: Database user name
  displayName: Database Username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: DB_USERNAME
  required: true
- description: Database user password
  displayName: Database Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DB_PASSWORD
  required: true
- description: Sets xa-pool/min-pool-size for the configured datasource.
  displayName: Datasource Minimum Pool Size
  name: DB_MIN_POOL_SIZE
- description: Sets xa-pool/max-pool-size for the configured datasource.
  displayName: Datasource Maximum Pool Size
  name: DB_MAX_POOL_SIZE
- description: Sets transaction-isolation for the configured datasource.
  displayName: Datasource Transaction Isolation
  name: DB_TX_ISOLATION
- description: Sets how the table names are stored and compared.
  displayName: MySQL Lower Case Table Names
  name: MYSQL_LOWER_CASE_TABLE_NAMES
- description: The maximum permitted number of simultaneous client connections.
  displayName: MySQL Maximum number of connections
  name: MYSQL_MAX_CONNECTIONS
- description: The minimum length of the word to be included in a FULLTEXT index.
  displayName: MySQL FullText Minimum Word Length
  name: MYSQL_FT_MIN_WORD_LEN
- description: The maximum length of the word to be included in a FULLTEXT index.
  displayName: MySQL FullText Maximum Word Length
  name: MYSQL_FT_MAX_WORD_LEN
- description: Controls the innodb_use_native_aio setting value if the native AIO
    is broken.
  displayName: MySQL AIO
  name: MYSQL_AIO
- description: The tag to use for the "mysql" image stream.  Typically, this aligns
    with the major.minor version of MySQL.
  displayName: MySQL Image Stream Tag
  name: MYSQL_IMAGE_STREAM_TAG
  required: true
  value: "5.7"
- description: Queue names.
  displayName: Queues
  name: MQ_QUEUES
- description: Topic names.
  displayName: Topics
  name: MQ_TOPICS
- description: A-MQ cluster admin password.
  displayName: A-MQ cluster password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: MQ_CLUSTER_PASSWORD
  required: true
- description: GitHub trigger secret.
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret.
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
    are normally installed in the openshift namespace. You should only need to modify
    this if you've installed the ImageStreams in a different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: JGroups cluster password.
  displayName: JGroups Cluster Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Controls whether exploded deployment content should be automatically
    deployed.
  displayName: Deploy Exploded Archives
  name: AUTO_DEPLOY_EXPLODED
  value: "false"
- description: Additional arguments passed to mvn, e.g. for multi-module builds.
  displayName: Maven Arguments To Append
  name: MAVEN_ARGS_APPEND
  value: -pl camel-jpa -am
- description: Maven mirror to use for S2I builds.
  displayName: Maven mirror URL
  name: MAVEN_MIRROR_URL
- description: List of directories from which archives will be copied into the deployment
    folder. If unspecified, all archives in /target will be copied.
  displayName: Artifact Directories
  name: ARTIFACT_DIR
  value: camel-jpa/target
- description: The amount of CPU to request.
  displayName: CPU request
  name: CPU_REQUEST
  required: true
  value: "0.2"
- description: The amount of CPU the container is limited to use.
  displayName: CPU limit
  name: CPU_LIMIT
  required: true
  value: "1.0"
- description: The amount of memory required for the container to run.
  displayName: Memory request
  name: MEMORY_REQUEST
  required: true
  value: 256Mi
- description: The amount of memory the container is limited to use.
  displayName: Memory limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: The amount of memory to request for builds.
  displayName: Build Memory request
  name: BUILD_MEMORY_REQUEST
  required: true
  value: 0.7G
- description: The amount of memory the build container is limited to use.
  displayName: Build Memory limit
  name: BUILD_MEMORY_LIMIT
  required: true
  value: 0.8G
